--    In√©s tables

CREATE TABLE Municipality(
   id_Municipality INT,
   region VARCHAR(50),
   rental_permises_nbr VARCHAR(50),
   town VARCHAR(50),
   PRIMARY KEY(id_Municipality)
);

CREATE TABLE Authorities(
   id_Authorities INT,
   region VARCHAR(50),
	id_Municipality INT,
   PRIMARY KEY(id_Authorities),
FOREIGN KEY (id_Municipality) REFERENCES Municipality(id_Municipality)
 );
-- Hajar tables

CREATE TABLE GeneralServices(
   idGeneralServices INT,
   idCompany INT NOT NULL,
   PRIMARY KEY(idGeneralServices)
);

CREATE TABLE Positions(
   id_position INT,
   longitude INT NOT NULL,
   latitude INT NOT NULL,
   id_map INT NOT NULL,
   PRIMARY KEY(id_position)
);

CREATE TABLE Building(
   id_building INT,
   PRIMARY KEY(id_building)
);

-- amal tables

CREATE TABLE Workspace(
   id_workspace INT,
   individual__office BOOLEAN,
   meeting_room BOOLEAN,
   openspace_ BOOLEAN,
   area INT,
   high_floor BOOLEAN,
   price INT,
   id_building INT,
   floor_number INT,
   employee_number INT,
   is_avalaible BOOLEAN,
   rent_by VARCHAR(50),
   PRIMARY KEY(id_workspace),
   FOREIGN KEY(id_building) REFERENCES Building(id_building)
);

CREATE TABLE Equipment(
   id_equipment INT,
   type_equipment VARCHAR(50),
   is_available BOOLEAN,
   is_working BOOLEAN,
   installation_date DATE,
   idGeneralServices INT,
   id_position INT,
   PRIMARY KEY(id_equipment),
   UNIQUE(id_position),
   FOREIGN KEY(idGeneralServices) REFERENCES GeneralServices(idGeneralServices),
   FOREIGN KEY(id_position) REFERENCES Positions(id_position)
);

CREATE TABLE Sensor(
   id_Sensor INT,
   type_sensor VARCHAR(50),
   is_available BOOLEAN,
   is_working BOOLEAN,
   installation_date DATE,
   idGeneralServices INT,
   id_position INT,
   PRIMARY KEY(id_Sensor),
   UNIQUE(id_position),
   FOREIGN KEY(idGeneralServices) REFERENCES GeneralServices(idGeneralServices),
   FOREIGN KEY(id_position) REFERENCES Positions(id_position)
);

CREATE TABLE Map(
   id_map INT,
   floor_number INT,
   id_workspace INT ,
   id_building INT,
   PRIMARY KEY(id_map),
   FOREIGN KEY(id_workspace) REFERENCES WorkSpace(id_workspace),
   FOREIGN KEY(id_building) REFERENCES Building(id_building)
);

-- Mohand tables
CREATE TABLE Empowerment(
   idEmpowerment INT,
   typeEmpowerment VARCHAR(50) NOT NULL,
   idEquipement INT NOT NULL,
   PRIMARY KEY(idEmpowerment),
   FOREIGN KEY(idEquipement) REFERENCES Equipment(id_equipment)
);

CREATE TABLE Person(
   idPerson INT,
   firstname VARCHAR(50) NOT NULL,
   lastname VARCHAR(50) NOT NULL,
   age INT NOT NULL,
   PRIMARY KEY(idPerson)
);

CREATE TABLE Employee(
   idMatricule INT,
   fonction VARCHAR(50) NOT NULL,
   manager VARCHAR(50) NOT NULL,
   idPerson INT,
   PRIMARY KEY(idMatricule),
   FOREIGN KEY(idPerson) REFERENCES Person(idPerson)

);

CREATE TABLE AccessLevel(
   idAccessLevel INT,
   idEquipement INT NOT NULL,
   idWorkspace INT NOT NULL,
   PRIMARY KEY(idAccessLevel),
   FOREIGN KEY(idWorkspace) REFERENCES WorkSpace(id_workspace),
   FOREIGN KEY(idEquipement) REFERENCES Equipment(id_equipment)
);

CREATE TABLE TokenGenerator(
  idToken INT,
  token VARCHAR(50),
  IdAccessLevel INT,
  PRIMARY KEY(idToken),
  FOREIGN KEY(idAccessLevel) REFERENCES AccessLevel(idAccessLevel)
);


CREATE TABLE AccessCard(
   idAccessCard INT,
   typeCard VARCHAR(50) NOT NULL,
   statutCard VARCHAR(50) NOT NULL,
   idMatricule INT NOT NULL,
   idGeneralServices INT NOT NULL,
   idEmpowerment INT NOT NULL,
   idToken INT NOT NULL,
   idAccessLevel INT NOT NULL,
   PRIMARY KEY(idAccessCard),
   FOREIGN KEY(idMatricule) REFERENCES Employee(idMatricule),
   FOREIGN KEY(idGeneralServices) REFERENCES GeneralServices(idGeneralServices),
   FOREIGN KEY(idEmpowerment) REFERENCES Empowerment(idEmpowerment),
   FOREIGN KEY(idToken) REFERENCES TokenGenerator(idToken),
   FOREIGN KEY(idAccessLevel) REFERENCES AccessLevel(idAccessLevel)
);